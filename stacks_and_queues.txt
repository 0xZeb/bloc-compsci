Exercises

1. What is the main difference between a stack and a queue?

Stacks are LIFO, queue is FIFO.

2. What are the similarities between stacks and queues?

The methods are relatively similar, they are iterable, and they are the answer
to specific problems in programming requiring prioritized entries.

3. Imagine you are an engineer tasked with implementing the UNDO and REDO options in a word processor such as Microsoft Word. Which data structure would you use for each option and why?

UNDO and REDO would require you to keep track of the last entry or command and access it relatively fast. This sounds like a LIFO stack as you would be able to recall in exact opposite order the procedures just executed.

Programming Questions

1. Given a string, reverse it using a stack. For example, the string "Bloc!" should be converted to "!colB".

```

function Stack(){
  this.data = [];
  this.head = this.data[0];
}

Stack.prototype.reverseString = function(item){
  var stringified = item.split("")
  let flipped = ""

  for(let i = 0; i < stringified.length; i++){
      this.data[i] = stringified[i];
  }

  this.head = this.data.length - 1;

  for(let i = this.head; i >= 0; i--){
    flipped += this.data[i];
  }

  console.log(flipped);
}


var stack = new Stack();

stack.reverseString("Bloc!");

```

2. Implement the delete functionality of a stack using one queue. Make a FIFO data structure mirror the functionality of a LIFO data structure.


CLASS Stack

SET head to last element of queue from queue
SET tail to first element of queue from queue

FUNCTION enqueue(element)
  APPEND element to the end of the list
END FUNCTION

FUNCTION dequeue
  SET temp to the first element
  REMOVE FIRST element of list from list
  RETURN temp
END FUNCTION


 FUNCTION pop(queue)
  LOOP through queue
    IF queue.tail == queue.head
      CALL DEQUEUE on head
      SET head to current position -1
      SET tail to [0]th element
    ELSE
      CALL enqueue on head

 END FUNCTION
END CLASS

3. Fill in the methods for the following Queue class so that it will work as expected (FIFO).


CLASS QUEUE
 FUNCTION enqueue(element)
    APPEND element to the end of the list
 END FUNCTION

 FUNCTION dequeue
    SET temp to the first newElement
    REMOVE first element of list from establishments
    return temp
 END FUNCTION
END CLASS
